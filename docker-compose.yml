#version: '3.9'

services:
  web:
    build: .
    command:  sh -c "python manage.py migrate && python manage.py createsu && python manage.py createrestuar && python manage.py collectstatic --noinput && gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - db
    env_file:
      - ./.env

  db:
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.env
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER" ]
      interval: 15s
      timeout: 5s
      retries: 5

  redis:
    image: "redis:latest"
    ports:
      - "6379:6379"
    volumes:
      - ./redis_data:/data
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 10s
      timeout: 5s
      retries: 5

  celery:
    build:
      context: .
    command: bash -c "celery -A config.celery worker -l INFO --pool=solo"
    volumes:
      - .:/app
    depends_on:
      - db
      - redis

  celery_beat:
    build:
      context: .
    command: bash -c "celery -A config beat -l INFO -S django"
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
      - celery

volumes:
  postgres_data:
  static_volume:
  redis_data:
